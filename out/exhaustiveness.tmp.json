{"DSGuard":{"hash":"7bb6d47bd94d47704c88b7019b98923dc473c8ef22aa98da4c2f2eef12df3486","name":"DSGuard__exhaustiveness","spec":"requires \"../rules.k\"\nrequires \"../bin_runtime.k\"\n\n\nmodule 7BB6D47BD94D47704C88B7019B98923DC473C8EF22AA98DA4C2F2EEF12DF3486\n  imports ETHEREUM-SIMULATION\n  imports EVM\n  imports RULES\n  imports BIN_RUNTIME\n  \n\n// DSGuard__exhaustiveness\nrule [DSGuard..exhaustiveness]:\n  <k> #execute ~> CONTINUATION => #halt ~> CONTINUATION </k>\n  <exit-code> 1 </exit-code>\n  <mode> NORMAL </mode>\n  <schedule> PETERSBURG </schedule>\n  <ethereum>\n    <evm>\n      <output> _ => VOutput </output>\n      <statusCode> _ => EVMC_REVERT_NETWORK </statusCode>\n      <callStack> VCallStack </callStack>\n      <interimStates> _ </interimStates>\n      <touchedAccounts> _ => _ </touchedAccounts>\n      <callState>\n        <program> #asMapOpCodes(#dasmOpCodes(DSGuard_bin_runtime, PETERSBURG)) </program>\n        <programBytes> DSGuard_bin_runtime </programBytes>\n        <id> ACCT_ID </id>\n        <caller> CALLER_ID </caller>\n        <callData> VCallData </callData>\n        <callValue> VCallValue </callValue>\n        <wordStack> .WordStack => _ </wordStack>\n        <localMem> .Map => _ </localMem>\n        <pc> 0 => _ </pc>\n        <gas> VGas => _ </gas>\n        <memoryUsed> 0 => _ </memoryUsed>\n        <callGas> _ => _ </callGas>\n        <static> _ </static>\n        <callDepth> VCallDepth </callDepth>\n      </callState>\n      <substate>\n        <selfDestruct> VSelfDestruct </selfDestruct>\n        <log> _ => VLog </log>\n        <refund> _ => VRefund </refund>\n      </substate>\n      <gasPrice> _ </gasPrice>\n      <origin> ORIGIN_ID </origin>\n      <previousHash> _ </previousHash>\n      <ommersHash> _ </ommersHash>\n      <coinbase> _ </coinbase>\n      <stateRoot> _ </stateRoot>\n      <transactionsRoot> _ </transactionsRoot>\n      <receiptsRoot> _ </receiptsRoot>\n      <logsBloom> _ </logsBloom>\n      <difficulty> _ </difficulty>\n      <number> _ </number>\n      <gasLimit> _ </gasLimit>\n      <gasUsed> _ </gasUsed>\n      <timestamp> TIME </timestamp>\n      <extraData> _ </extraData>\n      <mixHash> _ </mixHash>\n      <blockNonce> _ </blockNonce>\n      <ommerBlockHeaders> _ </ommerBlockHeaders>\n      <blockhash> _ </blockhash>\n    </evm>\n    <network>\n      <activeAccounts> VActiveAccounts </activeAccounts>\n      <accounts> _ </accounts>\n      <txOrder> _ </txOrder>\n      <txPending> _ </txPending>\n      <messages> _ </messages>\n    </network>\n  </ethereum>\nrequires #rangeAddress(ACCT_ID)\nandBool #notPrecompileAddress(ACCT_ID)\nandBool #rangeAddress(CALLER_ID)\nandBool #rangeAddress(ORIGIN_ID)\nandBool #rangeUInt(256, TIME)\nandBool #rangeUInt(256, ACCT_ID_balance)\nandBool VCallDepth <=Int 1024\nandBool #rangeUInt(256, VCallValue)\nandBool 330252341 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 734208381 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 2044235143 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 2057199179 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 2376452955 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 2824089446 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 3070268947 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 3212714319 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 3421415052 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))\nandBool 4028726501 =/=Int chop(#asWord(#take(4, #take(32, VCallData))))andBool VGas >=Int 40000000 \n\nendmodule\n","status":"????"}}